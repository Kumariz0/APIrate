{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to APIrate Usage Installation Example How it work Classes Pirate Contributing Feel free to contribute to this project by making a pull request or creating an issue.","title":"Home"},{"location":"#welcome-to-apirate","text":"","title":"Welcome to APIrate"},{"location":"#usage","text":"Installation Example How it work","title":"Usage"},{"location":"#classes","text":"Pirate","title":"Classes"},{"location":"#contributing","text":"Feel free to contribute to this project by making a pull request or creating an issue.","title":"Contributing"},{"location":"Pirate/","text":"Pirate Source code in APIrate/seaofthieves.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 class Pirate : def __init__ ( self , api_key ,): if api_key is None : # TODO write docs for getting RAT cookie raise APIKeyMissingError ( \"RAT Cookie is required. See https://github.com/Kumariz0/APIrate/wiki for how to retrieve an authentication token from Sea of Thieves.\" ) self . session = session self . api_key_cookie = { 'rat' : api_key } self . headers = { 'Referer' : 'https://www.seaofthieves.com/' } def get_profilev2 ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your own pirate. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"reputation\" , \"balance\" , \"status\" , \"captaincy\" , \"adventures\" , \"chest\" , \"achievements\" , \"overview\" ] BASE_URL = \"https://www.seaofthieves.com/api/profilev2\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () def get_user ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your friends. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS_USER = [ \"get-suggested-friend\" , \"playing\" , \"get-recent-friends\" , ] BASE_URL = \"https://www.seaofthieves.com/api/user\" if endpoint not in ALLOWED_ENDPOINTS_USER : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS_USER )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () def get_ledger ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about the global ledger. Args: endpoint (string): the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"GoldHoarders\" , \"OrderOfSouls\" , \"AthenasFortune\" , \"MerchantAlliance\" , \"ReapersBones\" ] BASE_URL = \"https://www.seaofthieves.com/api/ledger/global/\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () get_ledger ( endpoint ) Gets data from the sea of thieves api server about the global ledger. Parameters: endpoint ( string ) \u2013 the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 def get_ledger ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about the global ledger. Args: endpoint (string): the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"GoldHoarders\" , \"OrderOfSouls\" , \"AthenasFortune\" , \"MerchantAlliance\" , \"ReapersBones\" ] BASE_URL = \"https://www.seaofthieves.com/api/ledger/global/\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () get_profilev2 ( endpoint ) Gets data from the sea of thieves api server about your own pirate. Parameters: endpoint ( string ) \u2013 The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def get_profilev2 ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your own pirate. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"reputation\" , \"balance\" , \"status\" , \"captaincy\" , \"adventures\" , \"chest\" , \"achievements\" , \"overview\" ] BASE_URL = \"https://www.seaofthieves.com/api/profilev2\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () get_user ( endpoint ) Gets data from the sea of thieves api server about your friends. Parameters: endpoint ( string ) \u2013 The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def get_user ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your friends. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS_USER = [ \"get-suggested-friend\" , \"playing\" , \"get-recent-friends\" , ] BASE_URL = \"https://www.seaofthieves.com/api/user\" if endpoint not in ALLOWED_ENDPOINTS_USER : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS_USER )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json ()","title":"Class: Pirate"},{"location":"Pirate/#pirate","text":"Source code in APIrate/seaofthieves.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 class Pirate : def __init__ ( self , api_key ,): if api_key is None : # TODO write docs for getting RAT cookie raise APIKeyMissingError ( \"RAT Cookie is required. See https://github.com/Kumariz0/APIrate/wiki for how to retrieve an authentication token from Sea of Thieves.\" ) self . session = session self . api_key_cookie = { 'rat' : api_key } self . headers = { 'Referer' : 'https://www.seaofthieves.com/' } def get_profilev2 ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your own pirate. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"reputation\" , \"balance\" , \"status\" , \"captaincy\" , \"adventures\" , \"chest\" , \"achievements\" , \"overview\" ] BASE_URL = \"https://www.seaofthieves.com/api/profilev2\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () def get_user ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your friends. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS_USER = [ \"get-suggested-friend\" , \"playing\" , \"get-recent-friends\" , ] BASE_URL = \"https://www.seaofthieves.com/api/user\" if endpoint not in ALLOWED_ENDPOINTS_USER : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS_USER )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json () def get_ledger ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about the global ledger. Args: endpoint (string): the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"GoldHoarders\" , \"OrderOfSouls\" , \"AthenasFortune\" , \"MerchantAlliance\" , \"ReapersBones\" ] BASE_URL = \"https://www.seaofthieves.com/api/ledger/global/\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json ()","title":"Pirate"},{"location":"Pirate/#APIrate.seaofthieves.Pirate.get_ledger","text":"Gets data from the sea of thieves api server about the global ledger. Parameters: endpoint ( string ) \u2013 the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 def get_ledger ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about the global ledger. Args: endpoint (string): the endpoint, of where you want to get data from. Allowed endpoint are: GoldHoarders, OrderOfSouls, AthenasFortune, MerchantAlliance, ReapersBones Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"GoldHoarders\" , \"OrderOfSouls\" , \"AthenasFortune\" , \"MerchantAlliance\" , \"ReapersBones\" ] BASE_URL = \"https://www.seaofthieves.com/api/ledger/global/\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json ()","title":"get_ledger()"},{"location":"Pirate/#APIrate.seaofthieves.Pirate.get_profilev2","text":"Gets data from the sea of thieves api server about your own pirate. Parameters: endpoint ( string ) \u2013 The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def get_profilev2 ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your own pirate. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: reputation, balance, status, captaincy, adventures, chest, achievements, overview Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS = [ \"reputation\" , \"balance\" , \"status\" , \"captaincy\" , \"adventures\" , \"chest\" , \"achievements\" , \"overview\" ] BASE_URL = \"https://www.seaofthieves.com/api/profilev2\" if endpoint not in ALLOWED_ENDPOINTS : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json ()","title":"get_profilev2()"},{"location":"Pirate/#APIrate.seaofthieves.Pirate.get_user","text":"Gets data from the sea of thieves api server about your friends. Parameters: endpoint ( string ) \u2013 The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError \u2013 Invalid endpoint Returns: dict ( dict ) \u2013 A dict with the information gathered from the endpoint. Source code in APIrate/seaofthieves.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def get_user ( self , endpoint ): \"\"\"Gets data from the sea of thieves api server about your friends. Args: endpoint (string): The endpoint, of where you want to get data from. Allowed endpoints are: get-suggested-friend, playing, get-recent-friends Raises: InvalidEndpointError: Invalid endpoint Returns: dict (dict): A dict with the information gathered from the endpoint. \"\"\" ALLOWED_ENDPOINTS_USER = [ \"get-suggested-friend\" , \"playing\" , \"get-recent-friends\" , ] BASE_URL = \"https://www.seaofthieves.com/api/user\" if endpoint not in ALLOWED_ENDPOINTS_USER : raise InvalidEndpointError ( \"Invalid endpoint. Allowed endpoints are: \" + ', ' . join ( ALLOWED_ENDPOINTS_USER )) url = f \" { BASE_URL } / { endpoint } \" response = session . get ( url , headers = self . headers , cookies = self . api_key_cookie ,) return response . json ()","title":"get_user()"},{"location":"explanation/","text":"Explanation What is this? APIrate is a API wrapper for the API calls the Sea of Thieves website uses to get their data. It uses the so called RAT cookie to authenticate the user while getting the data. The RAT cookie is the authentication token that gets saved when logging in using a Microsoft account. How does it work? You create a new Pirate object while passing in the RAT cookie. You can then call the functions on the Pirate object to get the data you want. The functions are named after the endpoints the Sea of Thieves website uses to get their data. For example the get_profilev2() function is named after the /api/profilev2 endpoint. The get_profilev2() function returns a dictionary with the data from the endpoint. You can then call the get() function on the dictionary to get the data you want. For example the get() function can be used to get the gold of the player. How do I get the RAT cookie? You can either login using your browser and the grab the cookie from the browser. Look in the tutorials for more information on how to do this. Tip It might be possible to get tha RAT cookie by letting the user login on you webstite like merfolkslullaby does. This is not tested yet.","title":"Explanation"},{"location":"explanation/#explanation","text":"","title":"Explanation"},{"location":"explanation/#what-is-this","text":"APIrate is a API wrapper for the API calls the Sea of Thieves website uses to get their data. It uses the so called RAT cookie to authenticate the user while getting the data. The RAT cookie is the authentication token that gets saved when logging in using a Microsoft account.","title":"What is this?"},{"location":"explanation/#how-does-it-work","text":"You create a new Pirate object while passing in the RAT cookie. You can then call the functions on the Pirate object to get the data you want. The functions are named after the endpoints the Sea of Thieves website uses to get their data. For example the get_profilev2() function is named after the /api/profilev2 endpoint. The get_profilev2() function returns a dictionary with the data from the endpoint. You can then call the get() function on the dictionary to get the data you want. For example the get() function can be used to get the gold of the player.","title":"How does it work?"},{"location":"explanation/#how-do-i-get-the-rat-cookie","text":"You can either login using your browser and the grab the cookie from the browser. Look in the tutorials for more information on how to do this. Tip It might be possible to get tha RAT cookie by letting the user login on you webstite like merfolkslullaby does. This is not tested yet.","title":"How do I get the RAT cookie?"},{"location":"installation/","text":"Installation To install APIrate you can use pip to install it using the following command: pip install git+https://github.com/Kumariz0/APIrate.git or you can clone the repository and install it using the following commands: pip clone https://github.com/Kumariz0/APIrate.git pip install ./APIrate Local Usage You can obviously also download the repository and use it locally in your project.","title":"Installation"},{"location":"installation/#installation","text":"To install APIrate you can use pip to install it using the following command: pip install git+https://github.com/Kumariz0/APIrate.git or you can clone the repository and install it using the following commands: pip clone https://github.com/Kumariz0/APIrate.git pip install ./APIrate Local Usage You can obviously also download the repository and use it locally in your project.","title":"Installation"},{"location":"tutorials/","text":"Using APIrate To use APIrate first of make shure you have it installed. When installeg you can import it. Demo We are going to use the demo.py file for this example. # demo.py import APIrate as APIrate import browser_cookie3 as browsercookie import requests rat = requests . utils . dict_from_cookiejar ( browsercookie . firefox ()) . get ( 'rat' ) pirate = APIrate . Pirate ( rat ) print ( pirate . get_profilev2 ( \"balance\" ) . get ( \"gold\" )) First of in line 3-5 we import the necessary modules. We are going to use the browser_cookie3 module to get the necessary RAT cookie the Sea of Thieves website uses to authenticate you. The requests module is helping with grabing the cookie from the browser. rat = requests . utils . dict_from_cookiejar ( browsercookie . firefox ()) . get ( 'rat' ) This line is grabbing the cookie from the browser. You can use any browser you want. Just change the browsercookie.firefox() to the browser you want to use. For example browsercookie.chrome() . rat = requests . utils . dict_from_cookiejar ( browsercookie . chrome ()) . get ( 'rat' ) You can break this line down to the following: cookie_jar = browsercookie . firefox () cookie_dict = requests . utils . dict_from_cookiejar ( cookie_jar ) rat = cookie_dict . get ( 'rat' ) browsercookie.firefox() - This is a function that returns a CookieJar object containing cookies stored by Firefox. requests.utils.dict_from_cookiejar() - This is a function provided by the requests library that converts a CookieJar object into a dictionary. .get('rat') - This retrieves the value of the 'rat' key from the dictionary returned by dict_from_cookiejar() . In line 9 we define a Pirate object. This object is the player profile and contains the RAT cookie that you have to pass into it while defining it. pirate = APIrate . Pirate ( rat ) Finaly we print the gold of the player. This is done by calling the get_profilev2() function and passing in the balance endpoint. This will return a dictionary with the balance of the player. The balance for example is made up of the players title, doubloons, gold, ancient coins and the profile image. We then get the gold by calling the get() function on the dictionary and passing in the gold key. print ( pirate . get_profilev2 ( \"balance\" ) . get ( \"gold\" ))","title":"Usage"},{"location":"tutorials/#using-apirate","text":"To use APIrate first of make shure you have it installed. When installeg you can import it.","title":"Using APIrate"},{"location":"tutorials/#demo","text":"We are going to use the demo.py file for this example. # demo.py import APIrate as APIrate import browser_cookie3 as browsercookie import requests rat = requests . utils . dict_from_cookiejar ( browsercookie . firefox ()) . get ( 'rat' ) pirate = APIrate . Pirate ( rat ) print ( pirate . get_profilev2 ( \"balance\" ) . get ( \"gold\" )) First of in line 3-5 we import the necessary modules. We are going to use the browser_cookie3 module to get the necessary RAT cookie the Sea of Thieves website uses to authenticate you. The requests module is helping with grabing the cookie from the browser. rat = requests . utils . dict_from_cookiejar ( browsercookie . firefox ()) . get ( 'rat' ) This line is grabbing the cookie from the browser. You can use any browser you want. Just change the browsercookie.firefox() to the browser you want to use. For example browsercookie.chrome() . rat = requests . utils . dict_from_cookiejar ( browsercookie . chrome ()) . get ( 'rat' ) You can break this line down to the following: cookie_jar = browsercookie . firefox () cookie_dict = requests . utils . dict_from_cookiejar ( cookie_jar ) rat = cookie_dict . get ( 'rat' ) browsercookie.firefox() - This is a function that returns a CookieJar object containing cookies stored by Firefox. requests.utils.dict_from_cookiejar() - This is a function provided by the requests library that converts a CookieJar object into a dictionary. .get('rat') - This retrieves the value of the 'rat' key from the dictionary returned by dict_from_cookiejar() . In line 9 we define a Pirate object. This object is the player profile and contains the RAT cookie that you have to pass into it while defining it. pirate = APIrate . Pirate ( rat ) Finaly we print the gold of the player. This is done by calling the get_profilev2() function and passing in the balance endpoint. This will return a dictionary with the balance of the player. The balance for example is made up of the players title, doubloons, gold, ancient coins and the profile image. We then get the gold by calling the get() function on the dictionary and passing in the gold key. print ( pirate . get_profilev2 ( \"balance\" ) . get ( \"gold\" ))","title":"Demo"}]}